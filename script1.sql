/*USE master;

IF DB_ID (N'CasinoSlot') IS NOT NULL
DROP DATABASE CasinoSLot;

CREATE DATABASE CasinoSlot

SELECT name,size*1.0/128 AS [Size in MBs]
FROM sys.master_files
WHERE name = N'CasinoSlot'; 

*/
use CasinoSlot

CREATE TABLE EMPLOYEE (
    EMP_ID INTEGER PRIMARY KEY,
    EMP_FNAME VARCHAR(35) NOT NULL,
    EMP_LNAME VARCHAR(35) NOT NULL,
    EMP_ADDRESS VARCHAR(40) NOT NULL,
	EMP_EMAIL VARCHAR(40),
    EMP_DOB DATE NOT NULL,
    EMP_HIRE_DATE DATE NOT NULL,
    EMP_TERM_DATE DATE,
    EMP_DEPT_START_DATE DATE NOT NULL,
    EMP_LOCKER INTEGER,
    EMP_PAY_RATE DECIMAL(7,2) NOT NULL,
    EMP_VAC_ENTITLEMENT SMALLINT NOT NULL,
    EMP_SICK_ENTITLEMENT SMALLINT NOT NULL,
    DEPT_ID INT,
    ROLE_ID INT
);

CREATE TABLE Department (
    DEPT_ID INT PRIMARY KEY,
    DEPT_NAME VARCHAR(20) NOT NULL,
    DEPT_HEAD INT
);

CREATE TABLE DEPT_HISTORY (
    EMP_ID INT,
    DEPT_ID INT,
    ROLE_ID INT,
    HIST_START_DATE DATE NOT NULL,
    HIST_END_DATE DATE NOT NULL,
    PRIMARY KEY (EMP_ID, DEPT_ID, ROLE_ID)
);

CREATE TABLE EMPLOYEE_ROLE (
    ROLE_ID INT PRIMARY KEY,
    ROLE_TITLE VARCHAR(20) NOT NULL,
    ROLE_DESC VARCHAR(25) NOT NULL,
    DEPT_ID INT
);

CREATE TABLE ROLE_CERTIFICATION (
    ROLE_ID INT,
    CERTIFICATION_ID INT,
    PRIMARY KEY (ROLE_ID, CERTIFICATION_ID)
);

CREATE TABLE CERTIFICATION (
    CERTIFICATION_ID INT PRIMARY KEY,
    CERT_NAME VARCHAR(25) NOT NULL,
    CERT_VALID_FOR DATE NOT NULL,
    CERT_ISSUED_BY VARCHAR(25) NOT NULL
);

CREATE TABLE TRAINING_SESSION (
    SESSION_ID INT PRIMARY KEY,
    SESSION_DATE DATE NOT NULL,
    CERTIFICATION_ID INT NOT NULL,
    SKILL_ID INT
);

CREATE TABLE TRAINER_ATTENDANCE (
    EMP_ID INT,
    SESSION_ID INT,
    ATTEN_STATUS VARCHAR(25) NOT NULL,
    PRIMARY KEY (EMP_ID, SESSION_ID)
);

CREATE TABLE TRAINEE_ATTENDANCE (
    EMP_ID INT,
    SESSION_ID INT,
    ATTEN_STATUS VARCHAR(25) NOT NULL,
    PRIMARY KEY (EMP_ID, SESSION_ID)
);

CREATE TABLE SKILL (
    SKILL_ID INT PRIMARY KEY,
    SKILL_NAME VARCHAR(25) NOT NULL
);

CREATE TABLE SECTION_SKILL (
    SKILL_ID INT,
    SEC_ID INT,
    PRIMARY KEY (SKILL_ID, SEC_ID)
);

CREATE TABLE FLOOR_SECTION (
    SEC_ID INT PRIMARY KEY,
    SEC_NAME VARCHAR(25) NOT NULL
);

CREATE TABLE S_SHIFT (
    SHIFT_ID INT PRIMARY KEY,
    SHIFT_START SMALLDATETIME NOT NULL,
    SHIFT_END SMALLDATETIME NOT NULL,
    EMP_ID INT,
    SEC_ID INT,
    SCH_ID INT
);

CREATE TABLE SHIFT_INVENTORY (
    SHIFT_ID INT,
    INV_ID INT,
    QUANTITY INT NOT NULL,
    ASSIGN_DATE DATE NOT NULL,
    ASSIGN_STATUS VARCHAR(25) NOT NULL,
    EXP_DATE DATE,
    PRIMARY KEY (SHIFT_ID, INV_ID)
);

CREATE TABLE INVENTORY (
    INV_ID INT PRIMARY KEY,
    INV_TITLE VARCHAR(25) NOT NULL,
    INV_PRICE DECIMAL(9,2) NOT NULL,
    INV_QTY INT NOT NULL
);

CREATE TABLE LEAVE (
    LEAVE_ID INT PRIMARY KEY,
    LEAVE_TYPE VARCHAR(25) NOT NULL,
    LEAVE_START DATE NOT NULL,
    LEAVE_END DATE NOT NULL,
    LEAVE_COMMENT VARCHAR(255),
    EMP_ID INT
);

CREATE TABLE WRITTEN_WARNING (
    WW_ID INT PRIMARY KEY,
    WW_DATE DATE NOT NULL,
    WW_OFFENCE VARCHAR(25) NOT NULL,
    WW_LEVEL SMALLINT NOT NULL,
    WW_COMMENTS VARCHAR(255),
    EMP_ID INT NOT NULL
);

CREATE TABLE SCHEDULE(
SCH_ID INT PRIMARY KEY,
SCH_DATE DATE NOT NULL,
EMP_ID INT);

/*
-- Add foreign key constraints
ALTER TABLE Employee
ADD FOREIGN KEY (DEPT_ID) REFERENCES Department(DEPT_ID),
ADD FOREIGN KEY (ROLE_ID) REFERENCES EMPLOYEE_ROLE(ROLE_ID);

ALTER TABLE Department
ADD FOREIGN KEY (DEPT_HEAD) REFERENCES EMPLOYEE(EMP_ID);

ALTER TABLE DEPT_HISTORY
ADD FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
ADD FOREIGN KEY (DEPT_ID) REFERENCES Department(DEPT_ID),
ADD FOREIGN KEY (ROLE_ID) REFERENCES EMPLOYEE_ROLE(ROLE_ID);

ALTER TABLE EMPLOYEE_ROLE
ADD FOREIGN KEY (DEPT_ID) REFERENCES Department(DEPT_ID);

ALTER TABLE ROLE_CERTIFICATION
ADD FOREIGN KEY (ROLE_ID) REFERENCES EMPLOYEE_ROLE(ROLE_ID),
ADD FOREIGN KEY (CERTIFICATION_ID) REFERENCES CERTIFICATION(CERTIFICATION_ID);

ALTER TABLE TRAINING_SESSION
ADD FOREIGN KEY (CERTIFICATION_ID) REFERENCES CERTIFICATION(CERTIFICATION_ID),
ADD FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID);

ALTER TABLE TRAINER_ATTENDANCE
ADD FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
ADD FOREIGN KEY (SESSION_ID) REFERENCES TRAINING_SESSION(SESSION_ID);

ALTER TABLE TRAINEE_ATTENDANCE
ADD FOREIGN KEY (EMP_ID) REFERENCES Employee(EMP_ID),
ADD FOREIGN KEY (SESSION_ID) REFERENCES TRAINING_SESSION(SESSION_ID);

ALTER TABLE SECTION_SKILL
ADD FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID),
ADD FOREIGN KEY (SEC_ID) REFERENCES FLOOR_SECTION(SEC_ID);

ALTER TABLE S_SHIFT
ADD FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
ADD FOREIGN KEY (SEC_ID) REFERENCES FLOOR_SECTION(SEC_ID),
ADD FOREIGN KEY (SCH_ID) REFERENCES SCHEDULE(SCH_ID); -- Assuming there's a table named S_SCHEDULE with a primary key SCH_ID

ALTER TABLE SHIFT_INVENTORY
ADD FOREIGN KEY (SHIFT_ID) REFERENCES S_SHIFT(SHIFT_ID),
ADD FOREIGN KEY (INV_ID) REFERENCES INVENTORY(INV_ID);

ALTER TABLE LEAVE
ADD FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID);

ALTER TABLE WRITTEN_WARNING
ADD FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID);

ALTER TABLE SCHEDULE
ADD FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID);
*/

